Add e2e test for ship commands
Check node API for error call backs that we should implement.
Run tests on a different port, so having the server running doesn't blow them up.
Split server specs into e2e/unit directories.
Figure out how to test generated SVG in client. (index.html)
Review tests for coverage and organization.
Move static web page code out to its own class.
Unit tests for Vector
Review code for consistent usage of function over var
To avoid DOS attack limit number random ship position retries.
Create style guide
Add code coverage tool for client side code.
Add logging package (mostly so test runs don't natter so much :-) )
Add html5 gamepad support
Make sure we handle multiple cookies correctly.
Force focus to gamefield on reload.
Add visual indication of focus on gamefield.
Simplify fire client specs to not pay attention to key state.
Simplify fire server specs.

Session Managment
    Handle websocket disconnects (end user's session?)
    Handle errors on socket connect


Before Release
    Add favicon.
    Consistent code style
        Switch requires to return constructor directly.
    Add top level grunt to make sure a client 'grunt release' has been done before trying to run the server tests.
    Re-arrange project structure to have the client under the server directory
    Handle multiple bullets hitting a ship.
    Clone should give new ship random heading and velocity.


    
Refactor specs that just need GameField instead of Game

Move collision detection out to a utility class.
Split up GameField#handle_collisions()

Move script out of game.html
